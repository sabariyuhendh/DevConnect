generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(cuid())
  email          String         @unique
  name           String?
  username       String         @unique
  password       String
  bio            String?
  location       String?
  website        String?
  github         String?
  linkedin       String?
  profilePicture String?
  coverPicture   String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  posts          Post[]
  comments       Comment[]
  likes          Like[]         @relation("UserLikes")
  sessions       Session[]
  refreshTokens  RefreshToken[]
  followers      Follow[]       @relation("FollowedBy")
  following      Follow[]       @relation("Following")
}

model Post {
  id          String    @id @default(cuid())
  title       String
  content     String
  author      User      @relation(fields: [authorId], references: [id])
  authorId    String
  tags        String[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  comments    Comment[]
  likes       Like[]    @relation("PostLikes")
  views       Int       @default(0)
  isPublished Boolean   @default(true)
  @@index([authorId])
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  post      Post     @relation(fields: [postId], references: [id])
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@index([authorId])
  @@index([postId])
}

model Like {
  id        String   @id @default(cuid())
  userId    String
  postId    String
  user      User     @relation("UserLikes", fields: [userId], references: [id])
  post      Post     @relation("PostLikes", fields: [postId], references: [id])
  createdAt DateTime @default(now())
  
  @@unique([userId, postId])
  @@index([userId])
  @@index([postId])
}

model Follow {
  id          String   @id @default(cuid())
  followerId  String
  followingId String
  follower    User     @relation("FollowedBy", fields: [followerId], references: [id])
  following   User     @relation("Following", fields: [followingId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@unique([followerId, followingId])
  @@index([followerId])
  @@index([followingId])
}

model Session {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  
  @@index([userId])
}

model RefreshToken {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())
  
  @@index([userId])
}

// Implementation removed â€” Prisma schema to be reimplemented by the user.
